
fn simple(a) {
    host_call(a);
}

fn million() {
    let x = 1000000;
    while x > 0 {
        x = x - 1;
    }
}

fn fib(n) {
    if n < 2 {
        n
    } else {
        fib(n-1) + fib(n-2)
    }
}

fn five(n) {
    let i = 0;
    let ret = 0;
    while (i < 5) {
        ret = fib(n);
        i = i + 1;
    }
    ret
}

fn call(a, b, c) {
    a.host_call(b);
    a.host_call2(c);
}

fn sum_to_n(n) {
    let i = 0;
    let sum = 0;
    while (i < n && true) {
        i = i + 1;
        sum = sum + i;
    }
    return sum;
}

fn first(a, b) {
    a
}

fn call_first(a, b) {
    first(a, b)
}

fn max(a, b) {
    if (a > b && b < a || false) {
        return a * b - a / b;
    } else {
        return b % b - a + b;
    }
}

fn scope() {
    {
        let a = null;
    };
    return a;
}

fn enterprise_grade() {
    // hello
    let /* hi */ a /* hi */ = /* hi */ null;
    /* foo
       bar */
}